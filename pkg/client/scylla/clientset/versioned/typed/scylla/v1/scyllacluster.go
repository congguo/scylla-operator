// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	v1 "github.com/scylladb/scylla-operator/pkg/api/scylla/v1"
	scheme "github.com/scylladb/scylla-operator/pkg/client/scylla/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ScyllaClustersGetter has a method to return a ScyllaClusterInterface.
// A group's client should implement this interface.
type ScyllaClustersGetter interface {
	ScyllaClusters(namespace string) ScyllaClusterInterface
}

// ScyllaClusterInterface has methods to work with ScyllaCluster resources.
type ScyllaClusterInterface interface {
	Create(ctx context.Context, scyllaCluster *v1.ScyllaCluster, opts metav1.CreateOptions) (*v1.ScyllaCluster, error)
	Update(ctx context.Context, scyllaCluster *v1.ScyllaCluster, opts metav1.UpdateOptions) (*v1.ScyllaCluster, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, scyllaCluster *v1.ScyllaCluster, opts metav1.UpdateOptions) (*v1.ScyllaCluster, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.ScyllaCluster, error)
	List(ctx context.Context, opts metav1.ListOptions) (*v1.ScyllaClusterList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.ScyllaCluster, err error)
	ScyllaClusterExpansion
}

// scyllaClusters implements ScyllaClusterInterface
type scyllaClusters struct {
	*gentype.ClientWithList[*v1.ScyllaCluster, *v1.ScyllaClusterList]
}

// newScyllaClusters returns a ScyllaClusters
func newScyllaClusters(c *ScyllaV1Client, namespace string) *scyllaClusters {
	return &scyllaClusters{
		gentype.NewClientWithList[*v1.ScyllaCluster, *v1.ScyllaClusterList](
			"scyllaclusters",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1.ScyllaCluster { return &v1.ScyllaCluster{} },
			func() *v1.ScyllaClusterList { return &v1.ScyllaClusterList{} }),
	}
}
